<?php
/**
 * RestaurantApiInterface
 * PHP version 5
 *
 * @category Class
 * @package  CiliPica
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Čili Pica Restaurant
 *
 * This server allow client to browse available food and order it.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nerijus@eimanavicius.lt
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace CiliPica\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use CiliPica\Model\Meal;
use CiliPica\Model\Order;

/**
 * RestaurantApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  CiliPica\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface RestaurantApiInterface
{

    /**
     * Sets authentication method api_key
     *
     * @param string $value Value of the api_key authentication method.
     *
     * @return void
     */
    public function setapi_key($value);

    /**
     * Operation deleteOrder
     *
     * Delete purchase order by ID
     *
     * @param  int $orderId  ID of the order that needs to be deleted (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function deleteOrder($orderId, &$responseCode, array &$responseHeaders);

    /**
     * Operation getMenu
     *
     * Returns only available meals
     *
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return CiliPica\Model\Meal[]
     *
     */
    public function getMenu(&$responseCode, array &$responseHeaders);

    /**
     * Operation getOrderById
     *
     * Find purchase order by ID
     *
     * @param  int $orderId  ID of meal that needs to be fetched (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return CiliPica\Model\Order
     *
     */
    public function getOrderById($orderId, &$responseCode, array &$responseHeaders);

    /**
     * Operation placeOrder
     *
     * Place an order for a meal
     *
     * @param  CiliPica\Model\Order $body  order placed for purchasing the meal (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return CiliPica\Model\Order
     *
     */
    public function placeOrder(Order $body, &$responseCode, array &$responseHeaders);
}
